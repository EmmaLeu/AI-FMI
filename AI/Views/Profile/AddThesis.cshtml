@model AI.Models.PublicationVM
<div class="publication-nav" role="navigation">
    <ul class="nav nav-tabs nav-justified">
        <li role="presentation" id="add-journal">@Html.ActionLink("Journal", "AddJournal")</li>
        <li role="presentation" id="add-conference">@Html.ActionLink("Conference", "AddConference")</li>
        <li role="presentation" id="add-chapter">@Html.ActionLink("Chapter", "AddChapter")</li>
        <li role="presentation" id="add-book">@Html.ActionLink("Book", "AddBook")</li>
        <li role="presentation" class="active" id="add-thesis">@Html.ActionLink("Thesis", "AddThesis")</li>
        <li role="presentation" id="add-patent">@Html.ActionLink("Patent", "AddPatent")</li>
        <li role="presentation" id="add-other">@Html.ActionLink("Other", "AddOther")</li>
    </ul>
</div>
@using (Html.BeginForm("AddPublication", "Profile", new { category = "Thesis" }, FormMethod.Post, htmlAttributes: new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal publication-item">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Upload, "Document:", htmlAttributes: new { @class = "control-label col-md-2" })
            <input type="file" name="Upload" />
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Image, "Image:", htmlAttributes: new { @class = "control-label col-md-2" })
            <input type="file" name="Image" accept="image/*" />
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Authors, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Authors, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Authors, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PublicationDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PublicationDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PublicationDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Institution, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Institution, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Institution, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.KeyWords, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.KeyWords, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.KeyWords, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Abstract, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Abstract, htmlAttributes: new { @class = "form-control", @rows = 3 })
                @Html.ValidationMessageFor(model => model.Abstract, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Link, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Link, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Link, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LinkText, "Link Text", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LinkText, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LinkText, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button type="submit" value="Create" class="btn ai-btn-default col-md-2">ADD</button>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
